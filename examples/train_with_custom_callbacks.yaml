# Example YAML configuration for LLaMA-Factory with custom callbacks
# Save this as: examples/train_with_custom_callbacks.yaml

# Model and training configuration
model_name_or_path: "meta-llama/Llama-2-7b-hf"
stage: "sft"
do_train: true
finetuning_type: "lora"

# Dataset configuration  
dataset: "alpaca_gpt4_en"
template: "default"
cutoff_len: 1024

# Training arguments
per_device_train_batch_size: 2
gradient_accumulation_steps: 4
lr_scheduler_type: "cosine"
logging_steps: 10
save_steps: 1000
learning_rate: 5.0e-4
num_train_epochs: 3.0
max_samples: 1000
output_dir: "./saves/custom-callback-test"

# Custom callbacks configuration
custom_callbacks:
  # Built-in callbacks with custom args
  - name: "log"  # Default log callback
  
  - name: "early_stopping"
    args:
      early_stopping_patience: 5
      
  - name: "training_stage" 
    args:
      stage: "sft"
  
  # Company-specific callbacks
  - name: "callbacks.company.upload_monitor_to_new_platform"
    args:
      upload_url: "https://company-monitor.internal/api/metrics"
      api_key: "${COMPANY_API_KEY}"  # Environment variable
      project_name: "llama-sft-experiment"
      upload_interval: 50  # Upload every 50 steps
  
  - name: "callbacks.company2.myExtraLog"
    args:
      log_level: "debug"
      log_file: "./saves/custom-callback-test/company2_detailed.log"
      include_memory_usage: true
      include_gradients: false
  
  # Slack notifications  
  - name: "callbacks.slack.notification"
    args:
      webhook_url: "${SLACK_WEBHOOK_URL}"  # Environment variable
      notify_on_start: true
      notify_on_complete: true
      notify_interval: 100  # Notify every 100 steps

# Optional: Use only custom callbacks (disable built-in ones)
# custom_callbacks_only: false
